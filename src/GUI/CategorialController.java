/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GIS3D.LayerDefinition;
import GIS3D.NumericLayer;
import GIS3D.Viewing;
import com.jme3.system.AppSettings;
import com.jme3.system.JmeCanvasContext;
import java.awt.Canvas;
import java.awt.Dimension;
import java.util.concurrent.Callable;

/**
 *
 * @author Amir72c
 */
public class CategorialController extends javax.swing.JDialog {

    main_frame myParent;
    Viewing parentApp;
    String[] layers; 
    AppSettings settings;
    Canvas canvas;
    
    /**
     * Creates new form CategorialController
     */
    public CategorialController(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        myParent = (main_frame) parent;
        layers = new String[myParent.allData.all_Layers.size()];
        for (int i = 0; i < layers.length; i++) {
            //System.out.println(((LayerDefinition) mainFrame.allData.all_Layers.get(i)).layerName);
            layers[i] = ((LayerDefinition) myParent.allData.all_Layers.get(i)).layerName;
        }

        jList1.setModel(new javax.swing.AbstractListModel() {
            @Override
            public int getSize() {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                return layers.length;
            }

            @Override
            public Object getElementAt(int index) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                return layers[index];
            }
        });

        parentApp = new Viewing((main_frame) parent);
//        myParent.preProcessor.setWaysColor(myParent.allData, 1);
        settings = new AppSettings(true);
        settings.setWidth(viewPanel.getWidth());
        settings.setHeight(viewPanel.getHeight());
        settings.setFrameRate(myParent.capFrameRate);

        parentApp.setSettings(settings);

        parentApp.createCanvas();
        parentApp.startCanvas();

        JmeCanvasContext context = (JmeCanvasContext) parentApp.getContext();
        canvas = context.getCanvas();
        canvas.setSize(settings.getWidth(), settings.getHeight());
        viewPanel.add(canvas);

        parentApp.mySettings = settings;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        legendPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        outputPanel = new javax.swing.JPanel();
        viewPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Source layer:");

        jLabel2.setText("Values:");

        legendPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        legendPanel.setPreferredSize(new java.awt.Dimension(150, 100));

        javax.swing.GroupLayout legendPanelLayout = new javax.swing.GroupLayout(legendPanel);
        legendPanel.setLayout(legendPanelLayout);
        legendPanelLayout.setHorizontalGroup(
            legendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        legendPanelLayout.setVerticalGroup(
            legendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel3.setText("New values:");

        outputPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        outputPanel.setPreferredSize(new java.awt.Dimension(150, 100));

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        viewPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        viewPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                viewPanelComponentResized(evt);
            }
        });

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(legendPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                            .addComponent(legendPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                            .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewPanelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_viewPanelComponentResized
        // TODO add your handling code here:
        if (this.isVisible()) {
            settings.setWidth(viewPanel.getWidth());
            settings.setHeight(viewPanel.getHeight());
            canvas.setSize(settings.getWidth(), settings.getHeight());
            parentApp.enqueue(new Callable() {
                public Object call() throws Exception {
                    if (parentApp.isPickingNode) {
                        parentApp.resizeCrossHair();
                    }
                    // call methods that modify the scene graph here
                    return null;
                }
            });
        }
    }//GEN-LAST:event_viewPanelComponentResized

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        parentApp.enqueue(new Callable() {
            public Object call() throws Exception {
                refreshLegendList(jList1.getSelectedIndex());
                myParent.preProcessor.setWaysColorLayerBased(myParent.allData, jList1.getSelectedIndex());
                parentApp.refreshApp();
                return null;
            }
        });
    }//GEN-LAST:event_jList1ValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public void refreshLegendList(int layerIndex) {
        legendPanel.removeAll();
        outputPanel.removeAll();
        if (((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).myType.equals("base") || ((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).myType.equals("image")) {
            for (int i = 0; i < ((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).colors.length; i++) {
                ColorDefinition temp = new ColorDefinition(null, ((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).colors[i], i);
                temp.valueText.setText(String.valueOf(((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).values[i]));
                temp.NameText.setText(((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).categories[i]);
                temp.setBounds(0, i * 55, 243, 55);
                legendPanel.add(temp);
                outputPanel.add(temp);
            }
            legendPanel.setPreferredSize(new Dimension(243, (int) ((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).colors.length * 55));
            outputPanel.setPreferredSize(new Dimension(243, (int) ((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).colors.length * 55));
        } else if (((LayerDefinition) myParent.allData.all_Layers.get(layerIndex)).myType.equals("numeric")) {
            ColorDefinition tempmax = new ColorDefinition(null, ((NumericLayer) myParent.allData.all_Layers.get(layerIndex)).maxColor, 0);
            tempmax.valueText.setText("1");
            tempmax.NameText.setText("Max value");
            tempmax.setBounds(0, 0 * 55, 243, 55);
            legendPanel.add(tempmax);
            outputPanel.add(tempmax);

            ColorDefinition tempmin = new ColorDefinition(null, ((NumericLayer) myParent.allData.all_Layers.get(layerIndex)).minColor, 1);
            tempmin.valueText.setText("0");
            tempmin.NameText.setText("Min value");
            tempmin.setBounds(0, 1 * 55, 243, 55);
            legendPanel.add(tempmin);
            outputPanel.add(tempmin);
            legendPanel.setPreferredSize(new Dimension(243, 2 * 55));
            outputPanel.setPreferredSize(new Dimension(243, 2 * 55));
        }
        
        legendPanel.revalidate();
        outputPanel.revalidate();
        legendPanel.repaint();
        outputPanel.repaint();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel legendPanel;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables
}
