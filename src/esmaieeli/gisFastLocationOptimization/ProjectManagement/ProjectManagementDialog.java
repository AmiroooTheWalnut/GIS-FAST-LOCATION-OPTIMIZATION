/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package esmaieeli.gisFastLocationOptimization.ProjectManagement;

import esmaieeli.gisFastLocationOptimization.GIS3D.ImageLayer;
import esmaieeli.gisFastLocationOptimization.GIS3D.LayerDefinition;
import esmaieeli.gisFastLocationOptimization.GIS3D.LocationNode;
import esmaieeli.gisFastLocationOptimization.GIS3D.NumericLayer;
import esmaieeli.gisFastLocationOptimization.GIS3D.VectorLayer;
import esmaieeli.gisFastLocationOptimization.GIS3D.Viewing;
import esmaieeli.gisFastLocationOptimization.GUI.MainFrame;
import esmaieeli.gisFastLocationOptimization.Simulation.FacilityLocation;
import com.jme3.system.AppSettings;
import com.jme3.system.JmeCanvasContext;
import esmaieeli.gisFastLocationOptimization.GUI.MainFramePanel;
import java.awt.Canvas;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.Callable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SpinnerListModel;

/**
 *
 * @author amirooo
 */
public class ProjectManagementDialog extends javax.swing.JDialog {

    String[] layers;
    MainFramePanel myParent;
    Viewing myApp;
    AppSettings settings;
    Canvas canvas;

    Timer timer;

    FacilityLocation testFacility[];

    double simulationTime;

    /**
     * Creates new form ProjectManagementDialog
     */
    public ProjectManagementDialog(java.awt.Window window, MainFramePanel parent, ModalityType modal, Viewing app) {
        super(window, modal);
        initComponents();
        myParent = parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("StartListening");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Stop");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(564, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(334, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                String fileName = "status.txt";
                File file = new File(fileName);
                FileReader fr;
                try {
                    fr = new FileReader(file);
                    BufferedReader br = new BufferedReader(fr);
                    String line;
                    boolean isRequested = false;
                    while ((line = br.readLine()) != null) {
                        //process the line
                        System.out.println(line);
                        if (line.equals("requested")) {
                            isRequested = true;
                        }
                    }
                    fr.close();
                    if (isRequested == true) {

                        String fileNameS = "streets.txt";
                        File fileS = new File(fileNameS);
                        FileReader frS;
                        frS = new FileReader(fileS);
                        BufferedReader brS = new BufferedReader(frS);
                        String lineS;
                        ArrayList<String> streetNodeIds = new ArrayList();
                        while ((lineS = brS.readLine()) != null) {
                            //process the line
                            System.out.println(lineS);
                            streetNodeIds.add(lineS);
                        }
                        frS.close();

                        String fileNameB = "businesses.txt";
                        File fileB = new File(fileNameB);
                        FileReader frB;
                        frB = new FileReader(fileB);
                        BufferedReader brB = new BufferedReader(frB);
                        String lineB;
                        ArrayList<String> businessesNodeIds = new ArrayList();
                        while ((lineB = brB.readLine()) != null) {
                            //process the line
                            System.out.println(lineB);
                            businessesNodeIds.add(lineB);
                        }
                        frS.close();

                        myParent.flowControl.lavaBuffer.clear();
                        myParent.flowControl.queue_lavaBuffer.clear();
                        myParent.flowControl.queue_lavaRemove.clear();

                        FacilityLocation output[] = new FacilityLocation[streetNodeIds.size()];
                        for (int i = 0; i < streetNodeIds.size(); i++) {
                            for (int j = 0; j < myParent.allData.all_Nodes.length; j++) {
                                if (myParent.allData.all_Nodes[j].id==Integer.valueOf(streetNodeIds.get(i))) {
                                    output[i] = new FacilityLocation(myParent, myParent.allData.all_Nodes[j], myParent.allData.all_Nodes[j].myWays[0], 0.5);
                                }
                            }
                        }

                        BufferedWriter writer = new BufferedWriter(new FileWriter("answer.txt"));
                        for (int i = 0; i < streetNodeIds.size(); i++) {
                            FacilityLocation test[]=new FacilityLocation[1];
                            test[0]=output[i];
                            myParent.flowControl.simulateOneLayerCompetingLavaBased(output, myParent.findLayer("traffic"), 6, -1, false);
                            ArrayList<Double> lavaValuesOnBusinesses = new ArrayList();
                            for (int k = 0; k < businessesNodeIds.size(); k++) {
                                for (int j = 0; j < myParent.allData.all_Nodes.length; j++) {
                                    if (myParent.allData.all_Nodes[j].id==Integer.valueOf(businessesNodeIds.get(k))) {
                                        lavaValuesOnBusinesses.add(myParent.allData.all_Nodes[j].lava_value_indexed[0]);
                                    }
                                }
                            }
                            for (int m = 0; m < lavaValuesOnBusinesses.size(); m++) {
                                writer.write(lavaValuesOnBusinesses.get(m).toString());
                                writer.write("\n");
                            }
                            writer.write("*NEXT*STREET*");
                            writer.write("\n");
                        }

                        writer.close();

                        BufferedWriter Swriter = new BufferedWriter(new FileWriter("status.txt"));
                        Swriter.write("answered");
                        Swriter.close();
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ProjectManagementDialog.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ProjectManagementDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        },
                1000, 1000);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        timer.cancel();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
