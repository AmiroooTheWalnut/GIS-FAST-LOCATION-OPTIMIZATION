/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package esmaieeli.gisFastLocationOptimization.GUI;

import esmaieeli.gisFastLocationOptimization.GIS3D.LayerDefinition;
import esmaieeli.gisFastLocationOptimization.GIS3D.ReportResults;
import esmaieeli.gisFastLocationOptimization.SimOpt.PersonDefinition;
import esmaieeli.gisFastLocationOptimization.SimOpt.VariableGeneticAlgorithm;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Amir72c
 */
public class VLGA extends javax.swing.JDialog {

    MainFramePanel myParent;
    String layers[];
    ReportResults localReport;

    /**
     * Creates new form VLGA
     */
    public VLGA(java.awt.Window window, MainFramePanel parent, ModalityType modal) {
        super(window, modal);
        initComponents();

        myParent = parent;

        int cores = Runtime.getRuntime().availableProcessors();
        numCPU.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), Integer.valueOf(cores), Integer.valueOf(1)));

        DefaultComboBoxModel model = new DefaultComboBoxModel();

        if (myParent.allData != null) {
            layers = new String[myParent.allData.all_Layers.size() + 1];

            layers[0] = "--";

            for (int i = 0; i < myParent.allData.all_Layers.size(); i++) {
                layers[i + 1] = ((LayerDefinition) myParent.allData.all_Layers.get(i)).layerName;
            }


            for (int i = 0; i < layers.length; i++) {
                model.addElement(layers[i]);
            }
        } else {
            layers = new String[1];

            layers[0] = "NO DATA!";

            model.addElement(layers[0]);

            jButton1.setEnabled(false);
        }
        layerName.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layerName = new javax.swing.JComboBox();
        popNum = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        genNum = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        muPercent = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        IMuPercent = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        elitePercent = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        initLengthPercent = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        numCPU = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        layerName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        popNum.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        popNum.setText("100");

        jLabel1.setText("Target layer:");

        jLabel2.setText("Population number:");

        jLabel3.setText("Number of generation:");

        genNum.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        genNum.setText("100");

        jLabel4.setText("Mutation percent (0,1):");

        muPercent.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        muPercent.setText("0.05");

        jLabel5.setText("Internal mutation percent (0.1):");

        IMuPercent.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        IMuPercent.setText("0.05");

        jLabel6.setText("Elite percent (0,1):");

        elitePercent.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        elitePercent.setText("0.2");

        jLabel7.setText("Initial length percent (0,1):");

        initLengthPercent.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        initLengthPercent.setText("0.0001");

        jButton1.setText("Run");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        numCPU.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        jLabel8.setText("Number of CPUs:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(layerName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(popNum))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(genNum))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(muPercent))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IMuPercent, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(elitePercent))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(initLengthPercent))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numCPU)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(layerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(popNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(genNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(muPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(IMuPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(elitePercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(initLengthPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                try {
                    popNum.commitEdit();
                    int popNumV = Integer.parseInt(String.valueOf(popNum.getValue()));
                    genNum.commitEdit();
                    int genNumV = Integer.parseInt(String.valueOf(genNum.getValue()));
                    muPercent.commitEdit();
                    float muPercentV = Float.parseFloat(String.valueOf(muPercent.getValue()));
                    IMuPercent.commitEdit();
                    float IMuPercentV = Float.parseFloat(String.valueOf(IMuPercent.getValue()));
                    elitePercent.commitEdit();
                    float elitePercentV = Float.parseFloat(String.valueOf(elitePercent.getValue()));
                    initLengthPercent.commitEdit();
                    float initLengthPercentV = Float.parseFloat(String.valueOf(initLengthPercent.getValue()));

                    VariableGeneticAlgorithm vga;

                    if (layerName.getSelectedIndex() == 0) {
                        vga = new VariableGeneticAlgorithm(myParent, popNumV, genNumV, muPercentV, IMuPercentV, elitePercentV, initLengthPercentV);
                    } else {
                        vga = new VariableGeneticAlgorithm(myParent, popNumV, genNumV, muPercentV, IMuPercentV, elitePercentV, initLengthPercentV, layerName.getSelectedItem().toString());
                    }
                    
                    vga.console = jTextArea1;

                    //REPORTING
                    String detailedResults = "Variable length genetic algorithm." + System.lineSeparator();
                    detailedResults = detailedResults + "Number of population: " + popNumV + System.lineSeparator();
                    detailedResults = detailedResults + "Number of generations: " + genNumV + System.lineSeparator();
                    detailedResults = detailedResults + "Mutation percentage: " + muPercentV + System.lineSeparator();
                    detailedResults = detailedResults + "Internal mutation percentage: " + IMuPercentV + System.lineSeparator();
                    detailedResults = detailedResults + "Elite percentage: " + elitePercentV + System.lineSeparator();
                    detailedResults = detailedResults + "Init length percentage: " + initLengthPercentV + System.lineSeparator();
                    Calendar currentDate = Calendar.getInstance();
                    Date date = currentDate.getTime();
                    double startRAM = (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1024.0;
                    long startTime = System.nanoTime();
                    //REPORTING

                    PersonDefinition result=vga.run(Integer.parseInt(String.valueOf(numCPU.getValue())));
                    detailedResults = detailedResults + "Results: " + System.lineSeparator();
                    detailedResults = detailedResults + vga.console.getText() + System.lineSeparator();

                    //REPORTING
                    long endTime = System.nanoTime();
                    double elapsed = ((endTime - startTime) / 1000000000);
                    double endRAM = (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1024.0;
                    double usedRAM = endRAM - startRAM;
                    localReport = new ReportResults(date, "VGA", startTime, endTime, elapsed, Integer.parseInt(String.valueOf(numCPU.getValue())), startRAM, endRAM, usedRAM, detailedResults);
                    myParent.allData.results.add(localReport);
                    myParent.refreshReportList();
                    //REPORTING

                } catch (ParseException ex) {
                    Logger.getLogger(VLGA.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        thread.start();


    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField IMuPercent;
    private javax.swing.JFormattedTextField elitePercent;
    private javax.swing.JFormattedTextField genNum;
    private javax.swing.JFormattedTextField initLengthPercent;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox layerName;
    private javax.swing.JFormattedTextField muPercent;
    private javax.swing.JSpinner numCPU;
    private javax.swing.JFormattedTextField popNum;
    // End of variables declaration//GEN-END:variables
}
