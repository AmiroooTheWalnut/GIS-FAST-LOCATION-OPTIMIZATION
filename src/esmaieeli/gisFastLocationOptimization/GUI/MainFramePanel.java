/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package esmaieeli.gisFastLocationOptimization.GUI;

import esmaieeli.gisFastLocationOptimization.GIS3D.AllData;
import esmaieeli.gisFastLocationOptimization.GIS3D.ImageLayer;
import esmaieeli.gisFastLocationOptimization.GIS3D.LayerDefinition;
import esmaieeli.gisFastLocationOptimization.GIS3D.LocationNode;
import esmaieeli.gisFastLocationOptimization.GIS3D.NumericLayer;
import esmaieeli.gisFastLocationOptimization.GIS3D.PreProcessor;
import esmaieeli.gisFastLocationOptimization.GIS3D.ReportResults;
import esmaieeli.gisFastLocationOptimization.GIS3D.Viewing;
import esmaieeli.gisFastLocationOptimization.GIS3D.StoreProcessedData;
import esmaieeli.gisFastLocationOptimization.GIS3D.Scaling;
import esmaieeli.gisFastLocationOptimization.MathematicalModel.BenchmarkModel;
import esmaieeli.gisFastLocationOptimization.ProjectManagement.ProjectManagementDialog;
import esmaieeli.gisFastLocationOptimization.Simulation.FlowControl;
import esmaieeli.gisFastLocationOptimization.Simulation.Routing;
import esmaieeli.gisFastLocationOptimization.Simulation.VectorToPolygon;
import java.awt.Dialog;
import java.awt.Dialog.ModalityType;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListDataListener;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author user
 */
public class MainFramePanel extends javax.swing.JPanel {

    /**
     * Creates new form MainFramePanel
     */
    public MainFramePanel() {
        initComponents();
        InitializeApp();
    }
    
    MainFramePanel This = this;
    String input_file_path;
    public AllData allData;
    public Viewing app;
    public Routing routing;
    Credit credit = new Credit((JFrame) SwingUtilities.getWindowAncestor(this), true);
    public PreProcessor preProcessor;
    public FlowControl flowControl;
    public ImageLayer constructingImageLayer;
    public NumericController constructingNumericLayerController;
    public NumericLayer constructingNumericLayer;
    public HeuristicController heuristicController;
    BaseDataDetails baseDataDetails = new BaseDataDetails(SwingUtilities.getWindowAncestor(this), this, ModalityType.APPLICATION_MODAL);
    ImageControllerDefaults imageControllerDefaults;
    public int capFrameRate = 30;
    
    private void InitializeApp() {
        int cores = Runtime.getRuntime().availableProcessors();
        numCPUPreprocess.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), Integer.valueOf(cores), Integer.valueOf(1)));
        preProcessor = new PreProcessor(this);
        flowControl = new FlowControl(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        setRawDataButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        preprocessButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        numCPUPreprocess = new javax.swing.JSpinner();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        h_grid_num = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        v_grid_num = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        saveKryo = new javax.swing.JButton();
        loadKryo = new javax.swing.JButton();
        saveSerializedData = new javax.swing.JButton();
        loadSerializedData = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        addImageButton = new javax.swing.JButton();
        addNumericButton = new javax.swing.JButton();
        autoAddImageButton = new javax.swing.JButton();
        calFinalLayerButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        delLayerButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        layersList = new javax.swing.JList();
        sortLayersButton = new javax.swing.JButton();
        editLayerButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        checkAStarButton = new javax.swing.JButton();
        checkGAMSButton = new javax.swing.JButton();
        checkSimulator = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        clusteringZButton = new javax.swing.JButton();
        customDijkstraZButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        optMathematicalButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportList = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        deleteReport = new javax.swing.JButton();
        clearAllReports = new javax.swing.JButton();
        saveReports = new javax.swing.JButton();
        moveReportUpButton = new javax.swing.JButton();
        moveReportDownButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        View3DButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        detailedInfoButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        AboutButton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Data input"));

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        setRawDataButton.setText("Specify raw data");
        setRawDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRawDataButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("No file loaded");

        preprocessButton.setText("Preprocess");
        preprocessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preprocessButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Number of parallel CPUs:");

        numCPUPreprocess.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Init simple gridding"));

        jLabel5.setText("Horizental grid number:");

        h_grid_num.setText("10");

        jLabel6.setText("Vertical grid number:");

        v_grid_num.setText("10");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(v_grid_num, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addComponent(h_grid_num))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(h_grid_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(v_grid_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(preprocessButton)
                            .addComponent(setRawDataButton)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(numCPUPreprocess)))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(setRawDataButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(preprocessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(numCPUPreprocess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        saveKryo.setText("Save Kryo");
        saveKryo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveKryoActionPerformed(evt);
            }
        });

        loadKryo.setText("Load Kryo");
        loadKryo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadKryoActionPerformed(evt);
            }
        });

        saveSerializedData.setText("Save Serializable");
        saveSerializedData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSerializedDataActionPerformed(evt);
            }
        });

        loadSerializedData.setText("Load serializable");
        loadSerializedData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadSerializedDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveKryo)
                    .addComponent(loadKryo)
                    .addComponent(saveSerializedData)
                    .addComponent(loadSerializedData))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveKryo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadKryo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(saveSerializedData, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadSerializedData)
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        addImageButton.setText("Add Image layer");
        addImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImageButtonActionPerformed(evt);
            }
        });

        addNumericButton.setText("Add numeric layer");
        addNumericButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNumericButtonActionPerformed(evt);
            }
        });

        autoAddImageButton.setText("Auto image reader");
        autoAddImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoAddImageButtonActionPerformed(evt);
            }
        });

        calFinalLayerButton.setText("Calculate final layer");
        calFinalLayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calFinalLayerButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Add derived categorial layer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Change grids");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Full demand");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addImageButton)
                    .addComponent(addNumericButton)
                    .addComponent(autoAddImageButton)
                    .addComponent(calFinalLayerButton)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addImageButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autoAddImageButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addNumericButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calFinalLayerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        delLayerButton.setText("Delete layer");
        delLayerButton.setEnabled(false);
        delLayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delLayerButtonActionPerformed(evt);
            }
        });

        layersList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                layersListMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(layersList);

        sortLayersButton.setText("Sort layers");
        sortLayersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortLayersButtonActionPerformed(evt);
            }
        });

        editLayerButton.setText("Edit layer");
        editLayerButton.setEnabled(false);
        editLayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editLayerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(sortLayersButton)
                            .addGap(89, 89, 89)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(delLayerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editLayerButton)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delLayerButton)
                    .addComponent(editLayerButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortLayersButton)
                .addContainerGap())
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton5.setText("Project management");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Testing"));

        checkAStarButton.setText("Find path");
        checkAStarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAStarButtonActionPerformed(evt);
            }
        });

        checkGAMSButton.setText("Check GAMS");
        checkGAMSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkGAMSButtonActionPerformed(evt);
            }
        });

        checkSimulator.setText("Check simulator");
        checkSimulator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkSimulatorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkSimulator)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkGAMSButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAStarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkSimulator)
                    .addComponent(checkGAMSButton)
                    .addComponent(checkAStarButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Zoning"));

        clusteringZButton.setText("Clustering");
        clusteringZButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clusteringZButtonActionPerformed(evt);
            }
        });

        customDijkstraZButton.setText("Dijkstra heuristic");
        customDijkstraZButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customDijkstraZButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clusteringZButton)
                    .addComponent(customDijkstraZButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(clusteringZButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customDijkstraZButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Mathematical model"));

        optMathematicalButton.setText("Optimize zone based");
        optMathematicalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optMathematicalButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Variabe length GA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optMathematicalButton)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(optMathematicalButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporting"));

        reportList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                reportListMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(reportList);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        deleteReport.setText("Delete selected report");
        deleteReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteReportActionPerformed(evt);
            }
        });

        clearAllReports.setText("Clear all reports");
        clearAllReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllReportsActionPerformed(evt);
            }
        });

        saveReports.setText("Export");
        saveReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveReportsActionPerformed(evt);
            }
        });

        moveReportUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/esmaieeli/gisFastLocationOptimization/GUI/Profit.png"))); // NOI18N
        moveReportUpButton.setText("Move report up");
        moveReportUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveReportUpButtonActionPerformed(evt);
            }
        });

        moveReportDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/esmaieeli/gisFastLocationOptimization/GUI/Cost.png"))); // NOI18N
        moveReportDownButton.setText("Move report down");
        moveReportDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveReportDownButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(moveReportDownButton)
                                        .addComponent(saveReports, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(deleteReport, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(clearAllReports, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(moveReportUpButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(saveReports)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteReport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearAllReports)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moveReportUpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moveReportDownButton))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        View3DButton.setText("Layers view");
        View3DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View3DButtonActionPerformed(evt);
            }
        });

        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        detailedInfoButton.setText("Detailed info");
        detailedInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailedInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(View3DButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(detailedInfoButton))
                    .addComponent(ResetButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(View3DButton)
                    .addComponent(detailedInfoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResetButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        AboutButton.setText("About me");
        AboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AboutButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AboutButton)
                .addContainerGap())
        );

        jButton6.setText("Convert layer to image");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Convert image to polygon");

        jButton8.setText("Convert layer to polygon");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton6)
                                    .addComponent(jButton7)
                                    .addComponent(jButton8))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setRawDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRawDataButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            input_file_path = jFileChooser1.getSelectedFile().getPath();
            jLabel1.setText(input_file_path);
        }
    }//GEN-LAST:event_setRawDataButtonActionPerformed

    private void preprocessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preprocessButtonActionPerformed
        // TODO add your handling code here:
        allData = preProcessor.preprocess(input_file_path, Integer.parseInt(h_grid_num.getText()), Integer.parseInt(v_grid_num.getText()), (int) numCPUPreprocess.getValue());
        refreshReportList();
        make_lists();
        refreshLayersList();
        imageControllerDefaults = new ImageControllerDefaults(this);
    }//GEN-LAST:event_preprocessButtonActionPerformed

    private void saveKryoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveKryoActionPerformed
        // TODO add your handling code here:
        JFileChooser fc_save = new JFileChooser();
        fc_save.setAcceptAllFileFilterUsed(false);
        int returnVal = fc_save.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String file_name = fc_save.getSelectedFile().getName();
            String save_file_path = fc_save.getSelectedFile().getAbsolutePath();
            try {
                StoreProcessedData saving = new StoreProcessedData();
                saving.save_allData_kryo(save_file_path, allData);
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_saveKryoActionPerformed

    private void loadKryoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadKryoActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //file_name = jFileChooser1.getSelectedFile().getName();
            final String loaded_file_path = jFileChooser1.getCurrentDirectory().getPath();
            //jLabel1.setText(loaded_file_path);
            String file_name = jFileChooser1.getSelectedFile().getName();
            if (file_name.lastIndexOf(".") != -1) {
                file_name = file_name.substring(0, file_name.lastIndexOf("."));
            }

            final String passed_file_name = file_name;
            Thread readThread = new Thread(new Runnable() {
                @Override
                public void run() {
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    allData = preProcessor.read_allData_kryo(allData, loaded_file_path, passed_file_name, "data");
                    refreshReportList();
                }
            });
            readThread.start();
            try {
                readThread.join();
                make_lists();
                refreshLayersList();
                imageControllerDefaults = new ImageControllerDefaults(this);
                allData.myScale = new Scaling(allData.all_Nodes);
                allData.myScale.calculate();
            } catch (InterruptedException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_loadKryoActionPerformed

    private void saveSerializedDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSerializedDataActionPerformed
        // TODO add your handling code here:
        JFileChooser fc_save = new JFileChooser();
        fc_save.setAcceptAllFileFilterUsed(false);
        int returnVal = fc_save.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String file_name = fc_save.getSelectedFile().getName();
            String save_file_path = fc_save.getSelectedFile().getAbsolutePath();
            try {
                StoreProcessedData saving = new StoreProcessedData();

                saving.save_allData_serializable(save_file_path, allData);
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_saveSerializedDataActionPerformed

    private void loadSerializedDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadSerializedDataActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String loaded_file_path = jFileChooser1.getCurrentDirectory().getPath();
            String file_name = jFileChooser1.getSelectedFile().getName();
            if (file_name.lastIndexOf(".") != -1) {
                file_name = file_name.substring(0, file_name.lastIndexOf("."));
            }

            allData = preProcessor.read_allData(allData, loaded_file_path, file_name, "data");
            refreshReportList();
            //            System.out.println(allData.all_Nodes);
            //            System.out.println(allData.all_Ways);
            //            System.out.println(allData.myScale.all_Nodes);
            make_lists();
            refreshLayersList();
            imageControllerDefaults = new ImageControllerDefaults(this);
            allData.myScale = new Scaling(allData.all_Nodes);
            allData.myScale.calculate();
        }
    }//GEN-LAST:event_loadSerializedDataActionPerformed

    private void addImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImageButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setFileFilter(new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes()));
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //file_name = jFileChooser1.getSelectedFile().getName();
            input_file_path = jFileChooser1.getSelectedFile().getPath();
            String fileName = jFileChooser1.getSelectedFile().getName();
            try {
                System.out.println("@@@"+input_file_path);
                BufferedImage img = ImageIO.read(new File(input_file_path));
                System.out.println("!!!"+img);
                constructingImageLayer = new ImageLayer(fileName, imageControllerDefaults, img);
                ImageController imageController = new ImageController(SwingUtilities.getWindowAncestor(this), this, ModalityType.MODELESS, constructingImageLayer, constructingImageLayer.imageInByte, -1);
                imageController.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addImageButtonActionPerformed

    private void addNumericButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNumericButtonActionPerformed
        // TODO add your handling code here:
        constructingNumericLayer = new NumericLayer("numeric");
        constructingNumericLayerController = new NumericController(SwingUtilities.getWindowAncestor(this), this, ModalityType.MODELESS);
        constructingNumericLayerController.setVisible(true);
    }//GEN-LAST:event_addNumericButtonActionPerformed

    private void autoAddImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoAddImageButtonActionPerformed
        // TODO add your handling code here:
        AutoImageLayers autoImageLayers = new AutoImageLayers(SwingUtilities.getWindowAncestor(this), this, ModalityType.APPLICATION_MODAL);
        autoImageLayers.setVisible(true);
    }//GEN-LAST:event_autoAddImageButtonActionPerformed

    private void calFinalLayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calFinalLayerButtonActionPerformed
        // TODO add your handling code here:
        CalcFinalLayer calcFinalLayer = new CalcFinalLayer(SwingUtilities.getWindowAncestor(this), this, ModalityType.APPLICATION_MODAL);
        calcFinalLayer.setVisible(true);
    }//GEN-LAST:event_calFinalLayerButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CategorialController categorialController = new CategorialController(SwingUtilities.getWindowAncestor(this), this, ModalityType.APPLICATION_MODAL);
        categorialController.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        GridingDialog gd = new GridingDialog(SwingUtilities.getWindowAncestor(this), this, ModalityType.APPLICATION_MODAL);
        gd.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        ExhustiveDemandController exhustiveDemandController = new ExhustiveDemandController(SwingUtilities.getWindowAncestor(this), this, ModalityType.APPLICATION_MODAL);
        exhustiveDemandController.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void delLayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delLayerButtonActionPerformed
        // TODO add your handling code here:
        if (delLayerButton.getText().equals("sure?")) {
            int index = layersList.getSelectedIndex();
            allData.all_Layers.remove(index);
            for (int i = 0; i < allData.all_Nodes.length; i++) {
                allData.all_Nodes[i].layers.remove(index);
            }
            refreshLayersList();
            delLayerButton.setText("Delete layer");
        } else {
            delLayerButton.setText("sure?");
        }
    }//GEN-LAST:event_delLayerButtonActionPerformed

    private void layersListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layersListMousePressed
        // TODO add your handling code here:
        if (!layersList.isSelectionEmpty()) {
            delLayerButton.setEnabled(true);
            editLayerButton.setEnabled(true);
        } else {
            delLayerButton.setEnabled(false);
            editLayerButton.setEnabled(false);
        }
    }//GEN-LAST:event_layersListMousePressed

    private void sortLayersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortLayersButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortLayersButtonActionPerformed

    private void editLayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editLayerButtonActionPerformed
        // TODO add your handling code here:
        allData.setParallelLayers(1, -1);
        int selection = layersList.getSelectedIndex();
        if (((LayerDefinition) allData.all_Layers.get(selection)).myType.equals("image")) {
            ImageController imageController = new ImageController(SwingUtilities.getWindowAncestor(this), this, ModalityType.MODELESS, ((ImageLayer) allData.all_Layers.get(selection)), ((ImageLayer) allData.all_Layers.get(selection)).imageInByte, selection);
            imageController.setVisible(true);
        } else if (((LayerDefinition) allData.all_Layers.get(selection)).myType.equals("numeric")) {
            NumericController numericController = new NumericController(SwingUtilities.getWindowAncestor(this), this, ModalityType.APPLICATION_MODAL);
            numericController.jList1.setSelectedValue(selection, true);
            NumericLayer edittingNumericLayer = (NumericLayer) allData.all_Layers.get(selection);
            for (int i = 0; i < edittingNumericLayer.locationIds.length; i++) {
                FacilityLocationDefinition temp = new FacilityLocationDefinition(numericController, i);
                temp.IDText.setText(String.valueOf(edittingNumericLayer.locationIds[i]));
                temp.CapacityText.setText(String.valueOf(edittingNumericLayer.capacities[i]));
                numericController.locationDefinitions.add(temp);
            }
            numericController.isEdit = true;
            numericController.editIndex = selection;
            numericController.refreshFacilityLocationList();
            numericController.checkIDValidity();
            numericController.jTextField1.setText(edittingNumericLayer.layerName);
            for (int i = 0; i < allData.all_Nodes.length; i++) {
                double lavaValue = (double) allData.all_Nodes[i].layers.get(selection);
                if (lavaValue >= 0) {
                    allData.all_Nodes[i].isBurned = true;
                    allData.all_Nodes[i].lava_value_indexed[0] = lavaValue;
                } else {
                    allData.all_Nodes[i].isBurned = false;
                }
            }
            numericController.confirm.setEnabled(true);
            numericController.setVisible(true);
        } else if (((LayerDefinition) allData.all_Layers.get(selection)).myType.equals("category")) {
            CategoryLayerEditDialog categoryLayerEditDialog=new CategoryLayerEditDialog(SwingUtilities.getWindowAncestor(this), this, ModalityType.APPLICATION_MODAL,selection);
            categoryLayerEditDialog.setVisible(true);
        }
    }//GEN-LAST:event_editLayerButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        app = new Viewing(this);
        ProjectManagementDialog pm = new ProjectManagementDialog(SwingUtilities.getWindowAncestor(this), this, ModalityType.MODELESS, app);
        pm.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void checkAStarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAStarButtonActionPerformed
        // TODO add your handling code here:
        final MainFramePanel main = this;
        int trafficLayerIndex = -1;
        for (int i = 0; i < allData.all_Layers.size(); i++) {
            if (((LayerDefinition) allData.all_Layers.get(i)).layerName.toLowerCase().contains("traffic")) {
                trafficLayerIndex = i;
            }
        }
        routing = new Routing(allData, trafficLayerIndex, 0);
        Thread view_thred = new Thread(new Runnable() {
            @Override
            public void run() {
                app = new Viewing(This);
                app.isPickingRoute = true;
                ViewingGUI viewingGUI = new ViewingGUI(SwingUtilities.getWindowAncestor(This), main, ModalityType.APPLICATION_MODAL, app);
                viewingGUI.setVisible(true);
            }
        });
        view_thred.start();
    }//GEN-LAST:event_checkAStarButtonActionPerformed

    private void checkGAMSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkGAMSButtonActionPerformed
        // TODO add your handling code here:
        BenchmarkModel benchmarkModel = new BenchmarkModel(this);
        benchmarkModel.makeModel(null, 1);
    }//GEN-LAST:event_checkGAMSButtonActionPerformed

    private void checkSimulatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkSimulatorActionPerformed
        // TODO add your handling code here:
        SimulatorDebug SD = new SimulatorDebug(SwingUtilities.getWindowAncestor(This), this, ModalityType.APPLICATION_MODAL);
        SD.setVisible(true);
    }//GEN-LAST:event_checkSimulatorActionPerformed

    private void clusteringZButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clusteringZButtonActionPerformed
        // TODO add your handling code here:
        ClusteringDialog clusteringDialog = new ClusteringDialog(SwingUtilities.getWindowAncestor(This), this, ModalityType.APPLICATION_MODAL);
        clusteringDialog.setVisible(true);
    }//GEN-LAST:event_clusteringZButtonActionPerformed

    private void customDijkstraZButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customDijkstraZButtonActionPerformed
        // TODO add your handling code here:
        heuristicController = new HeuristicController(SwingUtilities.getWindowAncestor(This), this, ModalityType.APPLICATION_MODAL);
        heuristicController.setVisible(true);
    }//GEN-LAST:event_customDijkstraZButtonActionPerformed

    private void optMathematicalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optMathematicalButtonActionPerformed
        // TODO add your handling code here:
        MathematicalModel mathematicalModel = new MathematicalModel(SwingUtilities.getWindowAncestor(This), this, ModalityType.APPLICATION_MODAL);
        mathematicalModel.setVisible(true);
    }//GEN-LAST:event_optMathematicalButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        VLGA vlga = new VLGA(SwingUtilities.getWindowAncestor(This), this, ModalityType.APPLICATION_MODAL);
        vlga.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void reportListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportListMousePressed
        // TODO add your handling code here:
        if (!reportList.isSelectionEmpty()) {
            jTextArea2.setText(allData.results.get(reportList.getSelectedIndex()).generateResaults());
        }
    }//GEN-LAST:event_reportListMousePressed

    private void deleteReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteReportActionPerformed
        // TODO add your handling code here:
        if (deleteReport.getText().equals("sure?")) {
            if (reportList.getSelectedIndex() > -1) {
                allData.results.remove(reportList.getSelectedIndex());
                refreshReportList();
            }
            deleteReport.setText("Delete selected report");
        } else {
            deleteReport.setText("sure?");
        }
    }//GEN-LAST:event_deleteReportActionPerformed

    private void clearAllReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllReportsActionPerformed
        // TODO add your handling code here:
        if (clearAllReports.getText().equals("sure?")) {
            allData.results.clear();
            refreshReportList();
            clearAllReports.setText("Clear all reports");
        } else {
            clearAllReports.setText("sure?");
        }
    }//GEN-LAST:event_clearAllReportsActionPerformed

    private void saveReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveReportsActionPerformed
        // TODO add your handling code here:
        JFileChooser report_save = new JFileChooser();
        report_save.setAcceptAllFileFilterUsed(false);
        int returnVal = report_save.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String filePath = report_save.getSelectedFile().getAbsolutePath();
            try {
                String finalString = new String();
                for (int i = 0; i < allData.results.size(); i++) {
                    finalString = finalString + allData.results.get(i).generateResaults();
                    finalString = finalString + System.lineSeparator();
                    finalString = finalString + "***";
                    finalString = finalString + System.lineSeparator();
                }
                BufferedWriter bw = new BufferedWriter(new FileWriter(filePath));
                bw.write(finalString);
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_saveReportsActionPerformed

    private void moveReportUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveReportUpButtonActionPerformed
        // TODO add your handling code here:
        int selection = reportList.getSelectedIndex();
        if (selection > 0) {
            ArrayList<ReportResults> tempReports = new ArrayList();
            ReportResults lowerOne = allData.results.get(selection);
            ReportResults upperOne = allData.results.get(selection - 1);
            for (int i = 0; i < selection - 1; i++) {
                tempReports.add(allData.results.get(i));
            }
            tempReports.add(lowerOne);
            tempReports.add(upperOne);
            for (int i = selection + 1; i < allData.results.size(); i++) {
                tempReports.add(allData.results.get(i));
            }
            allData.results = tempReports;
            refreshReportList();
        }
    }//GEN-LAST:event_moveReportUpButtonActionPerformed

    private void moveReportDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveReportDownButtonActionPerformed
        // TODO add your handling code here:
        int selection = reportList.getSelectedIndex();
        if (selection > -1 && selection < allData.results.size() - 1) {
            ArrayList<ReportResults> tempReports = new ArrayList();
            ReportResults lowerOne = allData.results.get(selection + 1);
            ReportResults upperOne = allData.results.get(selection);
            for (int i = 0; i < selection; i++) {
                tempReports.add(allData.results.get(i));
            }
            tempReports.add(lowerOne);
            tempReports.add(upperOne);
            for (int i = selection + 2; i < allData.results.size(); i++) {
                tempReports.add(allData.results.get(i));
            }
            allData.results = tempReports;
            refreshReportList();
        }
    }//GEN-LAST:event_moveReportDownButtonActionPerformed

    private void View3DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View3DButtonActionPerformed
        // TODO add your handling code here:
        Thread view_thred = new Thread(new Runnable() {
            @Override
            public void run() {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                app = new Viewing(This);

                ViewingGUI viewingGUI = new ViewingGUI(SwingUtilities.getWindowAncestor(This), This, ModalityType.MODELESS, app);
                viewingGUI.setVisible(true);

            }
        });
        view_thred.start();
    }//GEN-LAST:event_View3DButtonActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        allData.setParallelLayers(1, -1);
        preProcessor.setWaysColorLayerBased(allData, 0);
        app.isRefreshing = true;
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void detailedInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailedInfoButtonActionPerformed
        baseDataDetails.refreshTable();
        baseDataDetails.setVisible(true);
    }//GEN-LAST:event_detailedInfoButtonActionPerformed

    private void AboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutButtonActionPerformed
        credit.setVisible(true);
    }//GEN-LAST:event_AboutButtonActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int layer=layersList.getSelectedIndex();
        if(!(allData.all_Layers.get(layer) instanceof NumericLayer)){
            VectorToPolygon vp=new VectorToPolygon();
            vp.layerToIndexedImage(allData,layer);
        }else{
            System.out.println("ONLY CATEGORICAL LAYERS!");
        }
    }//GEN-LAST:event_jButton6ActionPerformed


    public void refreshReportList() {
        reportList.setModel(new ListModel() {
            @Override
            public int getSize() {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                return allData.results.size();
            }

            @Override
            public Object getElementAt(int index) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                return allData.results.get(index).shortReportName;
            }

            @Override
            public void addListDataListener(ListDataListener l) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void removeListDataListener(ListDataListener l) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    public int findLayer(String layerName) {
        for (int i = 0; i < allData.all_Layers.size(); i++) {
            if (((LayerDefinition) allData.all_Layers.get(i)).layerName.toLowerCase().contains(layerName.toLowerCase())) {
                return i;
            }
        }
        System.out.println("Layer not found!: " + layerName);
        return -1;
    }

    public double getLayerValue(LocationNode node, int layerIndex) {
        double output = Double.NEGATIVE_INFINITY;
        if (((LayerDefinition) allData.all_Layers.get(layerIndex)) instanceof NumericLayer) {
            if (node.layers == null) {
                System.out.println(node.id);
            }
            output = (double) node.layers.get(layerIndex);
        } else {
            output = ((LayerDefinition) allData.all_Layers.get(layerIndex)).values[((short[]) node.layers.get(layerIndex))[0] - 1];
        }
        return output;
    }
    
    public void make_lists() {
        baseDataDetails.make_lists();
    }
    
    public void refreshLayersList() {
        layersList.setModel(new ListModel() {
            @Override
            public int getSize() {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                return allData.all_Layers.size();
            }

            @Override
            public Object getElementAt(int index) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                return ((LayerDefinition) (allData.all_Layers.get(index))).layerName;
            }

            @Override
            public void addListDataListener(ListDataListener l) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void removeListDataListener(ListDataListener l) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutButton;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton View3DButton;
    private javax.swing.JButton addImageButton;
    private javax.swing.JButton addNumericButton;
    private javax.swing.JButton autoAddImageButton;
    private javax.swing.JButton calFinalLayerButton;
    private javax.swing.JButton checkAStarButton;
    private javax.swing.JButton checkGAMSButton;
    private javax.swing.JButton checkSimulator;
    private javax.swing.JButton clearAllReports;
    private javax.swing.JButton clusteringZButton;
    private javax.swing.JButton customDijkstraZButton;
    private javax.swing.JButton delLayerButton;
    private javax.swing.JButton deleteReport;
    private javax.swing.JButton detailedInfoButton;
    private javax.swing.JButton editLayerButton;
    private javax.swing.JTextField h_grid_num;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JTextArea jTextArea2;
    private javax.swing.JList layersList;
    private javax.swing.JButton loadKryo;
    private javax.swing.JButton loadSerializedData;
    private javax.swing.JButton moveReportDownButton;
    private javax.swing.JButton moveReportUpButton;
    private javax.swing.JSpinner numCPUPreprocess;
    private javax.swing.JButton optMathematicalButton;
    private javax.swing.JButton preprocessButton;
    private javax.swing.JList reportList;
    private javax.swing.JButton saveKryo;
    private javax.swing.JButton saveReports;
    private javax.swing.JButton saveSerializedData;
    private javax.swing.JButton setRawDataButton;
    private javax.swing.JButton sortLayersButton;
    private javax.swing.JTextField v_grid_num;
    // End of variables declaration//GEN-END:variables
}
