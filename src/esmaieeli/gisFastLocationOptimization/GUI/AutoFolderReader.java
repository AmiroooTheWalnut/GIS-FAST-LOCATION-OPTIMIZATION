/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package esmaieeli.gisFastLocationOptimization.GUI;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author Amir72c
 */
public class AutoFolderReader extends javax.swing.JDialog {

    /**
     * Creates new form AutoFolderReader
     */
    public AutoFolderReader(java.awt.Window window, ModalityType modal) {
        super(window, modal);
        initComponents();
    }
    Object data[][];
    String headers[];
    Class[] types;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Select root folder");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null,  new Double(4.0),  new Boolean(true)},
                {null, null, null, null},
                {"", null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "NodeId", "Size", "Selected"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 105, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file_path = jFileChooser1.getSelectedFile();
            int numColumns = 4;
            int numRecords = file_path.listFiles().length;
            types = new Class[numColumns];
            data = new Object[numRecords][numColumns];
            headers = new String[numColumns];
            types = new Class[]{java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class};
            headers = new String[]{"Name", "NodeId", "Size", "Selected"};
            for (int i = 0; i < numRecords; i++) {
                System.out.println(file_path.listFiles()[i].getPath());
                data[i][0] = file_path.listFiles()[i].getName();
                data[i][1] = readNodeId(file_path.listFiles()[i].getPath());
                if (file_path.listFiles()[i].getPath().contains("small")) {
                    data[i][2] = new Double(2);
                } else if (file_path.listFiles()[i].getPath().contains("medium")) {
                    data[i][2] = new Double(2.5);
                } else {
                    data[i][2] = new Double(3);
                }
                if (file_path.listFiles()[i].getPath().contains("EXIST")) {
                    data[i][3] = false;
                } else if(file_path.listFiles()[i].getPath().contains("tiny"))
                {
                    data[i][3] = false;
                } else {
                    data[i][3] = true;
                }
            }
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    data,
                    headers) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, true, true
                };
                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private String readNodeId(String path) {
        String output = "-1";
        File folder = new File(path);

        for (int i = 0; i < folder.listFiles().length; i++) {
            if (folder.listFiles()[i].getName().toLowerCase().contains("nodeid")) {
                File file = folder.listFiles()[i];
                try {
                    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file)));
                    String sCurrentLine;
                    while ((sCurrentLine = br.readLine()) != null) {
                        System.out.println(sCurrentLine);
                        int start = sCurrentLine.lastIndexOf("node id=\"") + 9;
                        int end = sCurrentLine.indexOf("\"", start);
                        output = sCurrentLine.substring(start, end);
                        System.out.println(sCurrentLine.substring(start, end));
                        System.out.println("---");

                    }
                } catch (IOException ex) {
                    Logger.getLogger(AutoFolderReader.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        System.out.println("***");
        System.out.println(output);
        System.out.println("***");
        return output;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
